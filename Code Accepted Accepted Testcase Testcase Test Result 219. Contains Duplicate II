Given an integer array nums and an integer k, return true if there are two distinct indices i and j in the array such that nums[i] == nums[j] and abs(i - j) <= k.

 

Example 1:

Input: nums = [1,2,3,1], k = 3
Output: true
Example 2:

Input: nums = [1,0,1,1], k = 1
Output: true
Example 3:

Input: nums = [1,2,3,1,2,3], k = 2
Output: false
 

Constraints:

1 <= nums.length <= 105
-109 <= nums[i] <= 109
0 <= k <= 105


class Solution:
    def containsNearbyDuplicate(self, nums: List[int], k: int) -> bool:
        window = set()
        left_ptr = 0

        for right_ptr in range(len(nums)):
            if nums[right_ptr] in window:
                return True
            
            window.add(nums[right_ptr])
            
            if len(window)>k:
                window.remove(nums[left_ptr])
                left_ptr +=1
        
        return False

# Time complexity : O(N)
# Space Complexity : O(N)

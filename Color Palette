Select N colors for a pallet so that the difference between max and min chromatic value is no more than a threshold...
Attention: no duplicate indices should be selected. Given the input as a list of colors, use these colors to form palettes.

Given a list of colors with their chromatic values, select exactly N colors for a palette so that the difference between the maximum chromatic value and minimum chromatic value is no
more than a threshold.
Find the maximum number of palettes that can be made from the given colors.
Example 1
Input
colors = [6, 2, 10, 2, 11, 1, 3, 2]
paletteSize = 3
threshold = 4
Output
2
At most 2 palettes can be made: [1, 2, 2], [2, 3, 6] with a difference (max - min) no more than 4.
Example 2
Input
colors = [10, 15, 9, 10, 9, 1, 3, 3]
paletteSize = 4
threshold = 2
OneCode.com
Output
1
The only palette [9, 9, 10, 10] with max difference no more than 2.


def maxPalette(colors, paletteSize, threshold):
    """
    :type colors: List[int]
    :type paletteSize: int
    :type threshold: int
    :rtype: int
    """
    colors.sort()
    group_count = 0
    n = len(colors)
    i=0
    
    while i <= n-paletteSize:
        if colors[i+paletteSize-1] - colors[i] <=threshold:
            group_count +=1
            i+=paletteSize
        else:
            i +=1
    return group_count

# Time complxity : O(nlogn)
# Sapce complexity: O(1)
